---
- name: Install kubernetes post-install script
  template: src="kubernetes-post-install.sh" dest="/var/tmp/kubernetes-post-install.sh" mode=0755
        
- name: Execute kubernetes post-install script
  shell: /var/tmp/kubernetes-post-install.sh

- name: Copy dashboard files
  copy: src="dashboard/{{ item }}" dest="{{ kubernetes_x_dir }}/{{ item }}"
  with_items:
    - namespace-kube-system.yaml
    - kube-ui-rc.yaml
    - kube-ui-svc.yaml
  register: kui

# Workaround for lack of routes between node with apiserver and node running kube-ui pods
# label here, nodeSelector using label in kube-ui-rc.yaml
- name: Add a label to master node
  command: kubectl label node "ip-{{ stack_nodes.Controller.mgmt_ip | replace('.', '-') }}" "apiserver=present"

- name: Create resources
  when: kui.changed
  command: kubectl create -f "{{ kubernetes_x_dir }}/{{ item }}"
  with_items:
    - namespace-kube-system.yaml
    - kube-ui-rc.yaml
    - kube-ui-svc.yaml

- name: Create demo directory
  file: path="/home/ubuntu/demo/" mode=0775 state=directory

- name: Install additional tools (required for demo script)
  become: true
  become_user: root
  apt: pkg="{{ item }}"
  with_items:
    - tmux
    - pv

- name: Copy examples and demo script to demo directory
  copy: src="demo/{{ item }}" dest="/home/ubuntu/demo/{{ item }}"
  with_items:
    - demo.sh
    - example-controller.yaml
    - namespace-tenant-a.yaml
    - pod-backend.yaml
    - pod-frontend.yaml
    - romana-np-frontend-to-backend.json

- name: Make demo script executable
  file: path="/home/ubuntu/demo/demo.sh" mode=0755
